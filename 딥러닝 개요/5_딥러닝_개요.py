# -*- coding: utf-8 -*-
"""5. 딥러닝 개요.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GrhiFjgzimit0dcC2scoEvx-nLkWAq9d

# 개발 환경

- 로컬 PC
  - 레이저(LAZOR)
    - 게이밍 노트북 강추
    - EGPU 활용
  - GPU 있는 컴퓨터
    - **NVIDIA**
      - **CUDA 기술**(Compute Unified Device Architecture)
        => 그래픽 처리 장치(GPU)에서 수행하는(병렬 처리) 알고리즘을 C 프로그래밍 언어를 비롯한 산업 표준 언어를 사용하여 작성할 수 있도록 하는 GPGPU 기술이다.
    - AMD
      - ROCm 기술
      - 최근 tensorflow, 파이토치에서 지원
    - Mac => M1, M1MAX, M1PRO, M2
      - CPU & GPU 통합
      - 독자체계 QSX, IOS 별도 진행
  - 없으면 CPU 학습

- 클라우드 방식
  - 기성 제품
    - aws, azure, google,... 기타
    - 정부과제 => 바우처 제공 => azure사용(초기에 사업계획서에 작성)
    - **google에서 colab에서 12시간 쿼터(GPU/TPU사용)**
      - 지속적인 모니터링 필요
      - GPU학습이 CPU학습보다 시간적 이득이 확실할 때 사용
      - GPU학습 시 랜덤 SEED값이 변경되는 증상이 일부 있다

  - 자체 구축
    - 딥러닝 워크스테이션 구축
    - ubuntu + 파이썬환경(직접설치, 아나콘다, .., 가상환경으로 팀별로 나눠서 처리 가능)
      - GUI있는 ubuntu 환경 + 팀뷰어
    - 스펙이 적절하면 가상으로 나눠서 사용

# TPU

- 구글에서 만든 연산 장치
- Tensor Processing Unit
- GPU보다 성능이 우수
- 구글 클라우드에서만 사용가능
  - 딥마인드에서 주로 활용, 알파고 TPU 학습 진행
"""

from google.colab import drive
drive.mount('/content/drive')

from IPython.core.display import Image
Image('/content/drive/MyDrive/ComputerProgramming/DeepLearning/dl/ai_ml_dl.png')

## 인공지능

"""- 약 AI
  - 약한 AI
  - 시기 : ~ 현재, 근미래
  - 핵심 : 한가지만 잘한다
  - 예측 : 2023 ~ 2025년 사이 패러다임 전환
    - 완전 자율주행 차(테슬라)
    - 로봇(테슬라)

- 강 AI
  - 시기 : ~ 2040년
  - 핵심 : 여러가지 일을 모두 잘 하는 AI
    - Detroit : Become Human
    - 인간의 지성수준에 도달함

- 초 AI
  - 시기 : ~ 2060
  - 핵심 : 인간의 지성 수준을 초월

# 이미지 인식대회(ILSVRC)

- 개요
  - 한장의 사진에서 한장의 객체를 검출하여 그 정확도를 경연하는 대회
  - 2017년 종료, kaggle로 자료 이관

- history
  - AlexNet(2012)
    - 8 Layer
    - CNN을 처음으로 영상인식에 사용했다
      - 이를 통해 CNN을 상용하게 되었다
  - GoogleNet(2014~6)
    - Inception v2 ~4
    - Firebase MLKit, MobileNet에서 사용
  - VGG(2014)
    - VGG-16, VGG-19
    - 전이학습의 대표사례로 많이 사용
  - ResNet(2015)
    - 128 Layor
    - 깊을수록 성능이 좋아진다는 패러다임의 한계를 전환한 신경망, 강화학습에서 활용
  - SeNet(2017)
    - 인식 오차율 2.3%로 인간의 수준을 뛰어 넘은 신경망
"""

Image('/content/drive/MyDrive/ComputerProgramming/DeepLearning/dl/ILSVRC_인식률.png')

Image('/content/drive/MyDrive/ComputerProgramming/DeepLearning/dl/ILSVRC_깊이.png')

Image('/content/drive/MyDrive/ComputerProgramming/DeepLearning/dl/googLeNet.png')

"""- 분야
  - 성과를 이미 낸 분야
    - 이미지 / 영상 인식분야(객체 탐지)
    - 음성인식(AI 스피커 => 음성 데이터 수집, 음성인식 -> 서비스 구축, AI 개발을 위해 미끼상품)
    - 자연어 처리(챗봇 => 텍스트 수집)

  - 관심이 커지는 분야
    - 생성모델 분야 : 영상 생성, 음성 생성, 텍스트 생성 => 딥페이크(음지), 메타버스와 결합(음성, 영상복원) -> 4D 연결 서비스 제공
    - 시뮬레이션 분야
      -> UNITY 등 3D 시뮬레이션을 통한 학습
    - 강화학습 분야

# 엔진

- 개발 생산성 향상 목적
- C++, numpy로도 가능하다

## Tensorflow(1위)

- Google 제작, 개발자가 가장 많다
- 1.x, **2.x** 버전
- core 파트
  - C++, 실질적인 연산 C++로 처리
  - python <-> cython <-> C++
  - C++로 작동하기 때문에 빠르다
  - 파이썬으로는 설계 C++이 학습
  - 디버깅이 어렵다, 중간과정을 알 수 없기 때문에 
- https://www.tensorflow.org/?hl=ko
  - PC, 서버, 모바일, 웹 모두 지원
- Define and Run

- 개발 방식
  - 1.x를 2.x에 호환되게 처리
  - 2.x로 순수하게 작성
  - Keras로 작성(케라스의 백엔드가 TF가 되는 구조)

## PyTorch(2위)

- Meta(구.FACEBOOK)
- 점유율 2위, 빠른 시간내에 안착
- 파이썬 스타일
- C++, Rua 구성

- https://pytorch.org/
  - PC, 모바일 지원

- Define by Run
  - 정의하고 바로 실행
  - 중간 과정을 볼 수 있다. 디버깅 가능
  - 연구가관이 가장 많이 사용

## Keras(인터페이스)

- 점유율 3위(Tensorflow에 병합되어서 많이 사용됨)
- 엔진은 백엔드로 두고 그 상위에서 공통 API를 통해서 딥러닝이 가능하게 만들어진 구조
- Tensorflow 커밋 2017 행사에서 공식적으로 통합됨
- 문과생들을 위한 엔진

## 기타 엔진

- Theano
- CNTK
- MXNET
- Coffee
- Chainer(일본)

# 인공신경망

### CNN

- 컨볼루전(합성곱) 뉴럴 네트워크
- 주 분야는 영상인식
- 이 이미지는 XXX이미지 이다 분류처리
- 종류
  - 이미지 한장에서 한개의 객체 검출
    - 바운딩 박스를 적용해서 검출(라벨링)
  - 이미지 한장에서 여러개의 객체 검출
    - YOLO(https://pjreddie.com/darknet/yolo/)
    - Fast CNN, ...
  - 이미지 한장에서 사물의 shape 형태로 검출(사물의 실제모양을 본뜸)
    - mediapipe(https://google.github.io/mediapipe/)
  - base
    - opencv(https://opencv.org/)

### RNN

- 순환(재귀적) 뉴럴 네트워크
- 기존일반적 신경망 + 시퀀스(시간, 순서)
- 난이도가 높은 분야
- 종류
  - 자연어 처리
    - 문서 분류
    - 대화문 생성
    - 챗봇
    - 기계 번역
    - 문서 요약
    - 이미지 캡션
    - 토픽 추출
  - 시계열 분야
    - 스마트팩토리, 주식/금융(퀀트),
      - 통계 : ARIMA, AR, MA, ARMA
      - 머신러닝 : 회귀
      - 딥러닝 : RNN-LSTM, RNN-GRU
      - 상용라이브러리 : meta-prophet
      - 주식 => 강화학습 + 정성적 분석

- 구성(입력 대비 출력)
  - one - to - many
    - 이미지를 보고 텍스트 생성(출력)
  - many - to - one
    - 감정분석, 스팸메일 분류
  - many - to - many
    - 기계 번역, 챗봇

## GAN

- 적대적 **생성 모델**
- GAN, DCGAN, DEGAN,...
- 원리
  - 원본데이터와 최대한 동일하게 데이터를 생성할 수 있게 모델을 훈련시킴
  - 가짜 데이터를 판독하는 모델이 진짜로 인식하게 되면 종료(가짜 판별을 못함)
- 예시
  - 100년 전 사진 컬러로 복원
  - 유명 화품을 본따서 내 얼굴을 넣으면 피카소 그림처럼 된다
  - 유명 작곡가의 곡을 학습 => 이를 이용해서 작곡 => 그 풍의 음악
"""