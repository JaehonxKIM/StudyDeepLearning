# -*- coding: utf-8 -*-
"""1. 강의학습_용어_의미.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gdth06Zv3bIoyZhN-ylwcdDiElMsO5RS

# 정의

- AI > ML > 강화학습
- **Reinforcement Learnig : RL**
- 에이전트(교육을 시켜야 할 대상)가 환경에서 어떤 상태에 맞춰 어떤 행동을 취하면 가장 높은 보상을 받는지 스스로 찾아내는 학습법
- 학습 데이터가 없다
- 시행착오를 통해 경험으로 학습한다

# 용어정리

- 무인도에 A씨가 요트를 타고 이동중에 풍랑을 만나서, 난파되어 도착하였다. => 구출될때까지 생존하라!! (무인도에서 생존하기 위해서 강화학습으로 학습한다)

|용어|내용|
|--|--|
|Agent|- A씨, 강화학습의 대상<br>- 학습의 대상, 보상을 많이 받는 쪽으로 학습이 되는 주제|
|Environment|- 무인도 <br>- 환경, 게임의 무대, 바둑, 장기, 체스, 스타크래프트 -> 최소한의 게임의 룰이 존재(최소한의 개입)|
|Policy|- 정책<br>- 현재 상태에 따라, 다음 행동을 결정하는 판단이 기준값(에이전트는 정책에 따라 다음 행동을 결정한다)<br>- 에이전트의 판단 기준|
|Action|- 무인도에서는 걷는다, 먹는다 등의 행동<br>- 에이전트가 환경에서 일으키는 움직임|
|State|- 에이전트의 상태, 환경과 연계된 상태 ex) 배가 고프다, 비가 온다<br>- 에이전트가 행동을 하면 이에 따라 상태가 변경될 수 있다|
|Reward|- 물, 음식 등등<br>- 에이전트는 어떤 행동을 취했을 때 어떤 보상이 나오는지 모른다 -> 경험을 통해 알 수 있다|

# 보상

- 즉시 보상
  - 에이전트가 정책에 따라 행동을 취하면, 그 즉시 보상
  - ex) A씨가 휴식을 취하면 체력이 +10 된다
- 지연 보상
  - 미래에 발생할 보상
    - ex) 무인도를 10시간 탐사하면 -> 경험치 상승 -> 음식 발견 확률을 높인다
- **보상 => 즉시 보상 + 지연보상**

- 수익(interset)
  - 수익 = 즉시보상 + 지연보상
  - **수익을 극대화 하기 위해서 행동을 강화하는 것 -> 강화학습의 목적**

- 가치(Value)
  - 수익은 미래의 결론이다
  - 조건부로 수익을 계산할 수 있다(지연보상 부분을 현재시점에서 계산할 수 있다)
  - 어떤 조건에서 가장 높은 가치를 얻는지 -> 그 조건을 찾아내어 학습하는것
"""

from IPython.core.display import Image
Image('/content/drive/MyDrive/ComputerProgramming/DeepLearning/rl/강화2.jpg')

"""# 학습 전략, 사이클

- 에이전트는 최소한의 룰을 제외하고는 환경에서 어떤 행동을 취할 때 어떤 보상을 받는지 모른다
- 다양한 기법으로(랜덤, 확률 등등)행동을 취하고, 보상을 받고 이런 로그를 기록하여 이를 기반으로 정책을 갱신(여러가지 수식 존재)하여 경험을 쌓는다

# 에피소드, 스텝

- 1회 행동 = step
- 게임이 종료되었다 -> 게임 한 판 -> episode
- 1 에피소드 종료시 여러 번의 혹은 한 번의 step이 나올수 있다

# 마로코프 결정 과정

- 강화학습을 성립하게 하는 요소
- 현재 상태에서 선택한 행동이 다음 상황에 영향을 미치는 시스템
- MDP(Markov Decision Process)

# 정책 계산법

- 정책 반복법(Policy Iteration)
  - 대표적인 알고리즘: 정책 반복법
  - 행동을 중시(어떠한 행동을 취했는가)

- 가치 반복법(Value Iteration)
  - Saras(살사)
  - Q-Learning(큐러닝)
  - DQN(딥마인드에서 제작, 딥러닝)
    - 파생 알고리즘 => 파생 신경망으로 확산
    - CNN 이후 실습
  - 다음 상태의 가치와 현재 상태의 가치의 차이를 계산해서 가치가 높아지는 쪽으로 개선
"""